<?xml version="1.0" encoding="UTF-8"?>
<!-- namespace로 aop가 들어와있음~ -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.3.xsd">
		
		<!-- annotation 배제하고 실습 -->
		
		<!-- Target -->
		<bean class="pack.MessageImpl" id="targetBean">
			<property name="name" value="스프링" />
		</bean>
		
		<!-- Adivce(Aspect) - Target으로 weaving -->
		<bean class="aspect.MyAdvice" id="myAdvice" />
		
		<!--
		proxy로 간접 접근 : 메서드 호출 또는 공통 기능 등을 수행 
		어플리케이션과 AOP 설정을 직접 연계하지 않더라도 유연한 프로그래밍이 가능
		-->
		<bean class="org.springframework.aop.framework.ProxyFactoryBean" id="proxy">
			<!-- ProxyFactoryBean이 가진 속성 -->
			<property name="target">
				<ref bean="targetBean"/>
			</property>
			<property name="interceptorNames">
				<list>
					<!-- 작성한 Advisor를 준다 -->
					<value>hiAdvisor</value>
				</list>
			</property>
		</bean>
		
		<!-- Advisor (advice + pointcut) -->
		<bean class="org.springframework.aop.support.DefaultPointcutAdvisor" id="hiAdvisor">
			<property name="advice">
				<ref bean="myAdvice"/>
			</property>
			<property name="pointcut">
				<bean class="org.springframework.aop.support.JdkRegexpMethodPointcut">
					<property name="pattern">
						<value>.*sayHi*.</value>
					</property>
				</bean>
			</property>
		</bean>	
</beans>